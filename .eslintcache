[{"C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\index.tsx":"1","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\reportWebVitals.ts":"2","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\App.tsx":"3","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\main\\main.tsx":"4","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\select\\select.tsx":"5","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\tab\\tab.tsx":"6","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\imageCard\\imageCard.tsx":"7","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\radioButton\\RadioButton.tsx":"8","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\reviewContent\\ReviewContent.tsx":"9","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\errorMessageDialog\\ErrorMessageDialog.tsx":"10","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\index.tsx":"11","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\reportWebVitals.ts":"12","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\App.tsx":"13","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\main\\main.tsx":"14","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\select\\select.tsx":"15","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\reviewContent\\ReviewContent.tsx":"16","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\imageCard\\imageCard.tsx":"17","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\errorMessageDialog\\ErrorMessageDialog.tsx":"18","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\tab\\tab.tsx":"19","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\radioButton\\RadioButton.tsx":"20","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\instanceLayout\\InstanceLayout.tsx":"21","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\instanceLayout\\InstanceLayout.tsx":"22","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\storageNetworkLayout\\StorageNetworkLayout.tsx":"23","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\storageCard\\storageCard.tsx":"24","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\rangeSlider\\RangeSlider.tsx":"25"},{"size":528,"mtime":1607330456714,"results":"26","hashOfConfig":"27"},{"size":482,"mtime":1607143766811,"results":"28","hashOfConfig":"27"},{"size":440,"mtime":1607197570532,"results":"29","hashOfConfig":"27"},{"size":15827,"mtime":1607329698392,"results":"30","hashOfConfig":"27"},{"size":5111,"mtime":1607272097143,"results":"31","hashOfConfig":"27"},{"size":1199,"mtime":1607327256513,"results":"32","hashOfConfig":"27"},{"size":2542,"mtime":1607316914932,"results":"33","hashOfConfig":"27"},{"size":1545,"mtime":1607090056218,"results":"34","hashOfConfig":"27"},{"size":3991,"mtime":1607329159653,"results":"35","hashOfConfig":"27"},{"size":1482,"mtime":1607190162946,"results":"36","hashOfConfig":"27"},{"size":528,"mtime":1607016126468,"results":"37","hashOfConfig":"38"},{"size":482,"mtime":1607143766811,"results":"39","hashOfConfig":"38"},{"size":440,"mtime":1607197570532,"results":"40","hashOfConfig":"38"},{"size":11016,"mtime":1607196322682,"results":"41","hashOfConfig":"38"},{"size":4295,"mtime":1607191945010,"results":"42","hashOfConfig":"38"},{"size":1917,"mtime":1607196424516,"results":"43","hashOfConfig":"38"},{"size":2533,"mtime":1607077141979,"results":"44","hashOfConfig":"38"},{"size":1482,"mtime":1607190162946,"results":"45","hashOfConfig":"38"},{"size":880,"mtime":1607089048599,"results":"46","hashOfConfig":"38"},{"size":1545,"mtime":1607090056218,"results":"47","hashOfConfig":"38"},{"size":7472,"mtime":1607190349011,"results":"48","hashOfConfig":"38"},{"size":10102,"mtime":1607327581998,"results":"49","hashOfConfig":"27"},{"size":2642,"mtime":1607270876215,"results":"50","hashOfConfig":"27"},{"size":8291,"mtime":1607329914874,"results":"51","hashOfConfig":"27"},{"size":762,"mtime":1607331309357,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k3ov8z",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"el9z44",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},"C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\index.tsx",[],"C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\reportWebVitals.ts",["120"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",[],"C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\App.tsx",["121","122"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './component/main/main';\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h3>Hashedin Virtual Machine</h3>\r\n            </header>\r\n            <div className=\"App-body\">\r\n                <Main />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default App;\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\main\\main.tsx",["123","124","125","126","127","128","129"],"import React, { useEffect } from 'react';\r\nimport './main.css';\r\nimport Select, { SelectOptionInterface } from '../select/select';\r\nimport { Tab } from '../tab/tab';\r\nimport { ImageCardPropsInterface, ImageCardInterface, ImageCard } from '../imageCard/imageCard';\r\nimport { ReviewContent } from '../reviewContent/ReviewContent';\r\nimport { ErrorMessageDialog } from '../errorMessageDialog/ErrorMessageDialog';\r\nimport { InstanceLayout } from '../instanceLayout/InstanceLayout';\r\nimport { StorageCardItemInterface } from '../storageCard/storageCard';\r\nimport { StorageNetworkLayout } from '../storageNetworkLayout/StorageNetworkLayout';\r\n\r\nconst Main = (props: any) => {\r\n    const regions = [\r\n        { label: 'us-east-1', value: 1 },\r\n        { label: 'us-east-2', value: 2 },\r\n        { label: 'us-west-1', value: 3 },\r\n        { label: 'india-1', value: 4 },\r\n    ];\r\n\r\n    const tabItems = [\r\n        { id: 1, label: 'Choose Image' },\r\n        { id: 2, label: 'Choose Instance Type' },\r\n        { id: 3, label: 'Choose Storage and Network' },\r\n        { id: 4, label: 'Configure Security' },\r\n        { id: 5, label: 'Review & Launch' },\r\n    ];\r\n\r\n    const cardImageItems: ImageCardInterface[] = [\r\n        {\r\n            id: 1,\r\n            title: 'Linux 2 Image',\r\n            description:\r\n                'Linux 2 comes with 5 years od support. It provides Linux kernel 4.14 tuned for optical performance',\r\n            bitItems: ['64-bit(x86)', '64-bit(ARM)'],\r\n            price: 243.61,\r\n            region: 4,\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Ubuntu Server 18.04 LTS',\r\n            description:\r\n                'Linux 2 comes with 5 years od support. It provides Linux kernel 4.14 tuned for optical performance',\r\n            bitItems: ['64-bit(x86)', '64-bit(ARM)'],\r\n            price: 243.61,\r\n            region: 4,\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Red Hat Enterprise Linux 8',\r\n            description:\r\n                'Linux 2 comes with 5 years od support. It provides Linux kernel 4.14 tuned for optical performance',\r\n            bitItems: ['64-bit(x86)', '64-bit(ARM)'],\r\n            price: 300,\r\n            region: 4,\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'Microsoft Windows Server 2019 Base',\r\n            description:\r\n                'Linux 2 comes with 5 years od support. It provides Linux kernel 4.14 tuned for optical performance',\r\n            bitItems: ['64-bit(x86)'],\r\n            price: 338.77,\r\n            region: 2,\r\n        },\r\n        {\r\n            id: 5,\r\n            title: 'SUSE Linux Enterprise Server',\r\n            description:\r\n                'Linux 2 comes with 5 years od support. It provides Linux kernel 4.14 tuned for optical performance',\r\n            bitItems: ['64-bit(x86)', '64-bit(ARM)'],\r\n            price: 200.22,\r\n            region: 4,\r\n        },\r\n    ];\r\n\r\n    const instanceTypeCards = [\r\n        { id: 1, type: 'General Purpose', memory: 0, cpu: 0 },\r\n        { id: 2, type: 'Storage Optimized', memory: 1, cpu: 1 },\r\n        { id: 3, type: 'CPU Optimized', memory: 1, cpu: 2 },\r\n        { id: 4, type: 'Network Optimized', memory: 2, cpu: 3 },\r\n    ];\r\n\r\n    const storageTypeItems = [\r\n        { label: 'Magnetic Disks', value: 0 },\r\n        { label: 'SSD', value: 1 },\r\n    ];\r\n    const storageCards: StorageCardItemInterface[] = [\r\n        {\r\n            type: { label: 'Magnetic Disks', value: 0 },\r\n            volume: 'Root',\r\n            capacity: 120,\r\n            isEncryption: true,\r\n            iops: 600,\r\n            isBackupRequired: true,\r\n            remarks: 'Some Remarks',\r\n        },\r\n    ];\r\n\r\n    const [activeTab, setActiveTab] = React.useState(1);\r\n    const [region, setRegion] = React.useState(1);\r\n    const [image, setImage] = React.useState(1);\r\n    const [bits, setBits] = React.useState('64-bit(x86)');\r\n    const [instanceType, setInstanceType] = React.useState(1);\r\n\r\n    const [coreItem, setCoreItem] = React.useState({ value: 0, label: '1 Core' });\r\n    const [memoryItem, setMemoryItem] = React.useState({ value: 0, label: '256MB' });\r\n\r\n    const [storageDetail, setStorageDetail] = React.useState(storageCards);\r\n\r\n    const [bandwidth, setBandwidth] = React.useState(512);\r\n    const [bandwidthCost, setBandwidthCost] = React.useState(5);\r\n    const [totalPrice, setTotalPrice] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        let totalCost = cardImageItems[image - 1].price;\r\n        if (coreItem.label === '8 Core') {\r\n            totalCost = totalCost + 20;\r\n        } else if (coreItem.label === '16 Core') {\r\n            totalCost = totalCost + 40;\r\n        }\r\n        if (memoryItem.label === '32GB') {\r\n            totalCost = totalCost + 20;\r\n        } else if (memoryItem.label === '64GB') {\r\n            totalCost = totalCost + 40;\r\n        }\r\n        if (storageDetail.length > 1) {\r\n            storageDetail\r\n                .filter((storageInformation, valueIndex) => valueIndex !== 0)\r\n                .map((storageInformation) => {\r\n                    const storageCost = storageInformation.type.value === 0 ? 20 : 40;\r\n                    totalCost = totalCost + storageCost;\r\n                });\r\n        }\r\n        if (bandwidth < 1000 && bandwidth >= 512) {\r\n            setBandwidthCost(5);\r\n            totalCost = totalCost + 5;\r\n        } else if (bandwidth >= 1000 && bandwidth < 1500) {\r\n            setBandwidthCost(10);\r\n            totalCost = totalCost + 10;\r\n        } else if (bandwidth >= 1500) {\r\n            setBandwidthCost(15);\r\n            totalCost = totalCost + 15;\r\n        }\r\n        setTotalPrice(totalCost);\r\n    }, [image, coreItem, memoryItem, storageDetail, bandwidth]);\r\n\r\n    const addStorageCard = (storageCardList: StorageCardItemInterface[]): void => {\r\n        setStorageDetail(storageCardList);\r\n    };\r\n\r\n    const updateCore = (coreValue: SelectOptionInterface): void => {\r\n        setCoreItem(coreValue);\r\n    };\r\n\r\n    const updateMemory = (memoryValue: SelectOptionInterface): void => {\r\n        setMemoryItem(memoryValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            <div className=\"Main-body\">\r\n                <div className=\"Main-Tab-div\">\r\n                    <div className=\"Region-select-div\">\r\n                        <h2>{tabItems[activeTab - 1].label}</h2>\r\n                        <div className=\"region-select\">\r\n                            <Select\r\n                                key={regions[region - 1].label}\r\n                                options={regions}\r\n                                setRegion={setRegion}\r\n                                default={regions[region - 1]}\r\n                                activeTab={activeTab}\r\n                                image={image}\r\n                                setImage={setImage}\r\n                                disabled={activeTab > 1}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Tab-items-div\">\r\n                        <Tab tabItems={tabItems} activeTab={activeTab} />\r\n                    </div>\r\n                    <div className=\"Image-Tab-Contents\">\r\n                        {activeTab === 1 ? (\r\n                            <ImageCard\r\n                                imageCards={cardImageItems}\r\n                                region={region}\r\n                                activeTab={activeTab}\r\n                                setImage={setImage}\r\n                                setBits={setBits}\r\n                            />\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"InstanceType-Tab-Contents\">\r\n                        {activeTab === 2 ? (\r\n                            <InstanceLayout\r\n                                activeTab={activeTab}\r\n                                instanceTypeCards={instanceTypeCards}\r\n                                instanceType={instanceType}\r\n                                setInstanceType={setInstanceType}\r\n                                coreItem={coreItem}\r\n                                updateCore={updateCore}\r\n                                memoryItem={memoryItem}\r\n                                updateMemory={updateMemory}\r\n                                bandwidth={bandwidth}\r\n                                setBandwidth={setBandwidth}\r\n                            ></InstanceLayout>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"Storage-Tab-Contents\">\r\n                        {activeTab === 3 ? (\r\n                            <StorageNetworkLayout\r\n                                typeItems={storageTypeItems}\r\n                                storageCards={storageDetail}\r\n                                activeTab={activeTab}\r\n                                addStorageCard={addStorageCard}\r\n                                bandwidth={bandwidth}\r\n                                setBandwidth={setBandwidth}\r\n                                selectedInstanceType={instanceType}\r\n                            />\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"Security-Tab-Contents\">\r\n                        {activeTab === 4 ? (\r\n                            <h5>\r\n                                Security Configuration is still under Development, But Dont worry, You will be provided\r\n                                with high level security configured at free of cost.\r\n                            </h5>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"Review-Tab-Contents\">\r\n                        {activeTab === 5 ? (\r\n                            <ReviewContent\r\n                                key=\"1\"\r\n                                imageCard={cardImageItems[image - 1]}\r\n                                setBits={setBits}\r\n                                setImage={setImage}\r\n                                region={region}\r\n                                bits={bits}\r\n                                activeTab={activeTab}\r\n                                instanceType={instanceTypeCards[instanceType - 1].type}\r\n                                core={coreItem.label}\r\n                                memory={memoryItem.label}\r\n                                bandwidth={bandwidth}\r\n                                typeItems={storageTypeItems}\r\n                                storageCards={storageDetail}\r\n                                setActiveTab={setActiveTab}\r\n                            ></ReviewContent>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"Footer-div\">\r\n                        <div>\r\n                            {activeTab === 5 ? (\r\n                                <button\r\n                                    className=\"cancel-button\"\r\n                                    onClick={() => {\r\n                                        setActiveTab(1);\r\n                                        setRegion(1);\r\n                                        setImage(1);\r\n                                        setBits('64-bit(ARM)');\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            {activeTab > 1 ? (\r\n                                <button className=\"back-button\" onClick={() => setActiveTab(activeTab - 1)}>\r\n                                    Back\r\n                                </button>\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                <button\r\n                                    className=\"proceed-button\"\r\n                                    onClick={() => {\r\n                                        setActiveTab(activeTab === 5 ? 1 : activeTab + 1);\r\n                                    }}\r\n                                >\r\n                                    {activeTab === 5 ? 'Launch' : 'Proceed'}\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Cost-div\">\r\n                    <h3>Cost Estimates</h3>\r\n                    <div className=\"Cost-items-div\">\r\n                        <label>{cardImageItems[image - 1].title}</label>\r\n                        <label>${cardImageItems[image - 1].price}</label>\r\n                    </div>\r\n                    <div>\r\n                        {activeTab > 1 && coreItem.label === '8 Core' ? (\r\n                            <div className=\"Cost-items-div\">\r\n                                <label>CPU</label>\r\n                                <label>$20.00</label>\r\n                            </div>\r\n                        ) : null}\r\n                        {activeTab > 1 && coreItem.label === '16 Core' ? (\r\n                            <div className=\"Cost-items-div\">\r\n                                <label>CPU</label>\r\n                                <label>$40.00</label>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div>\r\n                        {activeTab > 1 && memoryItem.label === '32GB' ? (\r\n                            <div className=\"Cost-items-div\">\r\n                                <label>Memory</label>\r\n                                <label>$20</label>\r\n                            </div>\r\n                        ) : null}\r\n                        {activeTab > 1 && memoryItem.label === '64GB' ? (\r\n                            <div className=\"Cost-items-div\">\r\n                                <label>Memory</label>\r\n                                <label>$40</label>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div>\r\n                        {activeTab > 2 && storageDetail.length > 1 ? (\r\n                            <div>\r\n                                {storageDetail\r\n                                    .filter((storageInformation, valueIndex) => valueIndex !== 0)\r\n                                    .map((storageInformation, valueIndex) => {\r\n                                        return (\r\n                                            <div className=\"Cost-items-div\" key={valueIndex}>\r\n                                                <label>{`External ${storageInformation.type.label}`}</label>\r\n                                                <label>\r\n                                                    {storageInformation.type.value === 0 ? '$20.00' : '$40.00'}\r\n                                                </label>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div>\r\n                        {activeTab > 2 ? (\r\n                            <div className=\"Cost-items-div\">\r\n                                <label>{bandwidth} GB Bandwidth</label>\r\n                                <label>${bandwidthCost}.00</label>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"Total-price-div\">\r\n                        <label>${totalPrice} /mo</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\select\\select.tsx",["130","131","132"],"import React from 'react';\r\nimport chevronDown from '../../assets/images/down.svg';\r\nimport chevronUp from '../../assets/images/up.svg';\r\nimport './select.css';\r\nimport { ErrorMessageDialog } from '../errorMessageDialog/ErrorMessageDialog';\r\n\r\ninterface SelectPropsInterface {\r\n    key: string;\r\n    options: SelectOptionInterface[];\r\n    default: SelectOptionInterface;\r\n    setRegion: any;\r\n    activeTab: number;\r\n    image?: number;\r\n    setImage?: any;\r\n    capacity?: number;\r\n    setCapacity?: any;\r\n    disabled: boolean;\r\n}\r\n\r\nexport interface SelectOptionInterface {\r\n    label: string;\r\n    value: number;\r\n}\r\n\r\ninterface SelectMenuOptionInterface {\r\n    option: SelectOptionInterface;\r\n    onSelect: (option: SelectOptionInterface) => void;\r\n}\r\n\r\nconst Select: React.FC<SelectPropsInterface> = (props: SelectPropsInterface) => {\r\n    const { options } = props;\r\n    const [selectedOption, setSelectedOption] = React.useState<SelectOptionInterface>(props.default);\r\n    const [tempSelectedOption, setTempSelectedOption] = React.useState<SelectOptionInterface>(selectedOption);\r\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n    const [isErrorProceed, setIsErrorProceed] = React.useState(false);\r\n    const [isError, setIsError] = React.useState(false);\r\n\r\n    const [message, setMessage] = React.useState('If you proceed you may lose data');\r\n    const onOptionSelect = (option: SelectOptionInterface): void => {\r\n        const isStorageError =\r\n            props.activeTab === 3 &&\r\n            props.capacity &&\r\n            ((option.value === 1 && props.capacity > 512) || (option.value == 0 && props.capacity < 40));\r\n        if (isStorageError) {\r\n            setMessage(`${props.capacity} MB is not available for ${option.label}`);\r\n            setTempSelectedOption(option);\r\n            setIsError(!isError);\r\n        } else if (props.activeTab === 1 && props.image == 4 && option.value >= 2) {\r\n            setMessage('Windows is only available in us-east-1 and us-east-2. If you proceed you may lose data');\r\n            setTempSelectedOption(option);\r\n            setIsError(!isError);\r\n        } else {\r\n            setSelectedOption(option);\r\n            setIsMenuOpen(false);\r\n            props.setRegion(option.value);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const clickHandler = () => (isMenuOpen ? setIsMenuOpen(false) : null);\r\n        document.addEventListener('click', clickHandler);\r\n\r\n        return () => document.removeEventListener('click', clickHandler);\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (isErrorProceed) {\r\n            setIsError(false);\r\n            setIsErrorProceed(false);\r\n            setSelectedOption(tempSelectedOption);\r\n            setIsMenuOpen(false);\r\n            if (props.activeTab === 1) {\r\n                props.setRegion(tempSelectedOption.value);\r\n                props.setImage(1);\r\n            } else if (props.activeTab === 3 && props.capacity) {\r\n                props.setRegion(tempSelectedOption.value);\r\n                props.setCapacity(props.capacity < 40 ? 40 : 512);\r\n            }\r\n        }\r\n    }, [isErrorProceed]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Select\">\r\n                <button\r\n                    className=\"drop-down-button\"\r\n                    disabled={props.disabled}\r\n                    onClick={(): void => setIsMenuOpen((state) => !state)}\r\n                >\r\n                    <div className=\"drop-down-button-label\">{selectedOption.label}</div>\r\n                    <span className=\"dropdown-indicator\">\r\n                        <img\r\n                            src={isMenuOpen ? chevronUp : chevronDown}\r\n                            alt={`dropdown indicator ${isMenuOpen ? 'up' : 'down'}`}\r\n                        />\r\n                    </span>\r\n                </button>\r\n                {isMenuOpen && (\r\n                    <div className=\"drop-down-menu\">\r\n                        <ul className=\"drop-down-menu-list\" role=\"menu\">\r\n                            {options.map((option: SelectOptionInterface) => (\r\n                                <SelectMenuOption option={option} key={option.value} onSelect={onOptionSelect} />\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"ErrorMessageDialog\">\r\n                {isError ? (\r\n                    <ErrorMessageDialog\r\n                        message={message}\r\n                        setIsError={setIsError}\r\n                        setIsErrorProceed={setIsErrorProceed}\r\n                    />\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Select;\r\n\r\nconst SelectMenuOption: React.FC<SelectMenuOptionInterface> = (props: SelectMenuOptionInterface) => {\r\n    const { option, onSelect } = props;\r\n\r\n    const onItemClick = (): void => onSelect(option);\r\n\r\n    return (\r\n        <li className=\"menu-list-item\" onClick={onItemClick} role=\"option\" aria-selected=\"true\">\r\n            {option.label}\r\n        </li>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\tab\\tab.tsx",[],"C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\imageCard\\imageCard.tsx",["133","134","135","136","137"],"import React from 'react';\r\nimport './imageCard.css';\r\nimport { RadioButtonInterface, RadioButton } from '../radioButton/RadioButton';\r\n\r\nexport interface ImageCardPropsInterface {\r\n    imageCards: ImageCardInterface[];\r\n    region: number;\r\n    setImage: any;\r\n    setBits: any;\r\n    activeTab: number;\r\n}\r\n\r\nexport interface ImageCardItemPropsInterface {\r\n    imageCard: ImageCardInterface;\r\n    setImage: any;\r\n    setBits: any;\r\n    activeTab: number;\r\n}\r\n\r\nexport interface ImageCardInterface {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    bitItems: string[];\r\n    price: number;\r\n    region: number;\r\n}\r\n\r\nexport const ImageCard: React.FC<ImageCardPropsInterface> = (props: ImageCardPropsInterface) => {\r\n    const imageCards: ImageCardInterface[] = props.imageCards;\r\n\r\n    return (\r\n        <div className=\"Image-card\">\r\n            <ul className=\"Image-card-list\">\r\n                {imageCards.map((imageCard: ImageCardInterface) => {\r\n                    return props.region <= imageCard.region ? (\r\n                        <ImageCardItem\r\n                            key={imageCard.id}\r\n                            imageCard={imageCard}\r\n                            setImage={props.setImage}\r\n                            setBits={props.setBits}\r\n                            activeTab={props.activeTab}\r\n                        />\r\n                    ) : null;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ImageCardItem: React.FC<ImageCardItemPropsInterface> = (props: ImageCardItemPropsInterface) => {\r\n    const imageCard: ImageCardInterface = props.imageCard;\r\n    return (\r\n        <div className=\"ImageCardItem\">\r\n            <div className=\"Image-div\">\r\n                <img src=\"../../assets/images/hashed.jpg\" />\r\n            </div>\r\n            <div className=\"Content-div\">\r\n                <h3>{imageCard.title}</h3>\r\n                <label>{imageCard.description}</label>\r\n            </div>\r\n            <div className=\"Bits-div\">\r\n                <RadioButton radioButtons={imageCard.bitItems} buttonItem={imageCard.id} setBits={props.setBits} />\r\n                {props.activeTab === 1 ? (\r\n                    <button\r\n                        className=\"select-button\"\r\n                        onClick={() => {\r\n                            props.setImage(imageCard.id);\r\n                        }}\r\n                    >\r\n                        Select\r\n                    </button>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\radioButton\\RadioButton.tsx",["138","139"],"import React from 'react';\r\nimport './RadioButton.css';\r\n\r\nexport interface RadioButtonPropsInterface {\r\n    radioButtons: string[];\r\n    buttonItem: number;\r\n    setBits: any;\r\n}\r\n\r\nexport interface RadioButtonInterface {\r\n    index: number;\r\n    value: number;\r\n    label: string;\r\n    setBits: any;\r\n}\r\n\r\nexport const RadioButton: React.FC<RadioButtonPropsInterface> = (props: RadioButtonPropsInterface) => {\r\n    const radioButtons: string[] = props.radioButtons;\r\n\r\n    return (\r\n        <div className=\"RadioButton\">\r\n            <ul className=\"RadioButton-list\">\r\n                {radioButtons.map((radioButton: string, index) => (\r\n                    <RadioButtonItem\r\n                        key={index}\r\n                        index={index}\r\n                        value={props.buttonItem}\r\n                        label={radioButton}\r\n                        setBits={props.setBits}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RadioButtonItem: React.FC<RadioButtonInterface> = (props: RadioButtonInterface) => {\r\n    const value: string = props.value.toString();\r\n    return (\r\n        <label>\r\n            <div>\r\n                <input\r\n                    type=\"radio\"\r\n                    value={props.value}\r\n                    name={value}\r\n                    defaultChecked={props.index == 0}\r\n                    onClick={() => props.setBits(props.label)}\r\n                ></input>\r\n                {props.label}\r\n            </div>\r\n        </label>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\reviewContent\\ReviewContent.tsx",["140","141","142","143"],"import React from 'react';\r\nimport './ReviewContent.css';\r\nimport { ImageCardInterface, ImageCard } from '../imageCard/imageCard';\r\nimport { StorageCardItemInterface, StorageCard } from '../storageCard/storageCard';\r\nimport { SelectOptionInterface } from '../select/select';\r\n\r\nexport interface ReviewContentPropsInterface {\r\n    imageCard: ImageCardInterface;\r\n    region: number;\r\n    setImage: any;\r\n    setBits: any;\r\n    bits: string;\r\n    activeTab: number;\r\n    instanceType: string;\r\n    core: string;\r\n    memory: string;\r\n    bandwidth: number;\r\n    storageCards: StorageCardItemInterface[];\r\n    typeItems: SelectOptionInterface[];\r\n    setActiveTab: any;\r\n}\r\nexport const ReviewContent: React.FC<ReviewContentPropsInterface> = (props: ReviewContentPropsInterface) => {\r\n    const imageCard = props.imageCard;\r\n    if (imageCard.bitItems.length !== 1) {\r\n        imageCard.bitItems = [props.bits];\r\n    }\r\n    const imageCardList: ImageCardInterface[] = [];\r\n    imageCardList.push(imageCard);\r\n\r\n    const addStorageCard = (storageCardList: StorageCardItemInterface[]): void => {\r\n        console.log('loadedSuccessfully');\r\n    };\r\n\r\n    return (\r\n        <div className=\"ReviewContent\">\r\n            <div className=\"Json-div\">\r\n                <button className=\"proceed-button\">Generate Json</button>\r\n            </div>\r\n            <div className=\"ImageTabContent\">\r\n                <div className=\"header-div\">\r\n                    <h3 className=\"header\">Image</h3>\r\n                    <button className=\"Edit-button\" onClick={() => props.setActiveTab(1)}>\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n                <ImageCard\r\n                    imageCards={imageCardList}\r\n                    region={props.region}\r\n                    setImage={props.setImage}\r\n                    setBits={props.setBits}\r\n                    activeTab={props.activeTab}\r\n                />\r\n            </div>\r\n            <div className=\"InstanceTypeContent\">\r\n                <div className=\"header-div\">\r\n                    <h3 className=\"header\">Instance</h3>\r\n                    <button className=\"Edit-button\" onClick={() => props.setActiveTab(2)}>\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n                <div className=\"Instance-info-card\">\r\n                    <h3>{props.instanceType}</h3>\r\n                    <div className=\"Inner-instance-info-card\">\r\n                        <label>{props.core} CPU</label>\r\n                        <label>512Gb Storage</label>\r\n                    </div>\r\n                    <label>{props.memory}</label>\r\n                    <label>Moderate Network Performance</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"BandwidthContent\">\r\n                <div className=\"header-div\">\r\n                    <h3 className=\"header\">Bandwidth</h3>\r\n                    <button className=\"Edit-button\" onClick={() => props.setActiveTab(3)}>\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n                <div className=\"Bandwidth-info-card\">\r\n                    <h3 className=\"bandWidth-info\">{props.bandwidth} GB</h3>\r\n                    <h3> / Month</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"StorageContent\">\r\n                <div className=\"header-div\">\r\n                    <h3 className=\"header\">Storage</h3>\r\n                    <button className=\"Edit-button\" onClick={() => props.setActiveTab(3)}>\r\n                        Edit\r\n                    </button>\r\n                </div>\r\n                <StorageCard\r\n                    key={props.storageCards.length}\r\n                    storageCards={props.storageCards}\r\n                    activeTab={props.activeTab}\r\n                    typeItems={props.typeItems}\r\n                    addStorageCard={addStorageCard}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\errorMessageDialog\\ErrorMessageDialog.tsx",["144","145"],"import React from 'react';\r\nimport './ErrorMessageDialog.css';\r\nimport close from '../../assets/images/close.svg';\r\n\r\ninterface ErrorMessageDialogInterface {\r\n    message: string;\r\n    setIsError: any;\r\n    setIsErrorProceed: any;\r\n}\r\n\r\nexport const ErrorMessageDialog: React.FC<ErrorMessageDialogInterface> = (props: ErrorMessageDialogInterface) => {\r\n    return (\r\n        <div className=\"ErrorDialogOuter\">\r\n            <div className=\"ErrorDialog\">\r\n                <div className=\"Header\">\r\n                    <button className=\"close-button\" onClick={() => props.setIsError(false)}>\r\n                        <span className=\"close-icon\">\r\n                            <img src={close} alt=\"close\" />\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"Content\">\r\n                    <label>{props.message}</label>\r\n                </div>\r\n                <div className=\"Footer\">\r\n                    <button className=\"no-button\" onClick={() => props.setIsError(false)}>\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"yes-button\"\r\n                        onClick={() => {\r\n                            props.setIsErrorProceed(true);\r\n                        }}\r\n                    >\r\n                        Yes, Proceed\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\index.tsx",[],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\reportWebVitals.ts",["146"],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\App.tsx",["147","148"],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\main\\main.tsx",["149","150","151","152","153","154","155","156"],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\select\\select.tsx",["157","158"],"import React from 'react';\r\nimport chevronDown from '../../assets/images/down.svg';\r\nimport chevronUp from '../../assets/images/up.svg';\r\nimport './select.css';\r\nimport { ErrorMessageDialog } from '../errorMessageDialog/ErrorMessageDialog';\r\n\r\ninterface SelectPropsInterface {\r\n    options: SelectOptionInterface[];\r\n    default: SelectOptionInterface;\r\n    setRegion: any;\r\n    activeTab: number;\r\n    image?: number;\r\n    setImage?: any;\r\n}\r\n\r\nexport interface SelectOptionInterface {\r\n    label: string;\r\n    value: number;\r\n}\r\n\r\ninterface SelectMenuOptionInterface {\r\n    option: SelectOptionInterface;\r\n    onSelect: (option: SelectOptionInterface) => void;\r\n}\r\n\r\nconst Select: React.FC<SelectPropsInterface> = (props: SelectPropsInterface) => {\r\n    const { options } = props;\r\n    const [selectedOption, setSelectedOption] = React.useState<SelectOptionInterface>(props.default);\r\n    const [tempSelectedOption, setTempSelectedOption] = React.useState<SelectOptionInterface>(selectedOption);\r\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n    const [isErrorProceed, setIsErrorProceed] = React.useState(false);\r\n    const [isError, setIsError] = React.useState(false);\r\n\r\n    const message = 'Windows is only available in us-east-1 and us-east-2. If you proceed you may lose data';\r\n    const onOptionSelect = (option: SelectOptionInterface): void => {\r\n        if (props.activeTab === 1 && props.image == 4 && option.value >= 2) {\r\n            setTempSelectedOption(option);\r\n            setIsError(!isError);\r\n        } else {\r\n            setSelectedOption(option);\r\n            setIsMenuOpen(false);\r\n            props.setRegion(option.value);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const clickHandler = () => (isMenuOpen ? setIsMenuOpen(false) : null);\r\n        document.addEventListener('click', clickHandler);\r\n\r\n        return () => document.removeEventListener('click', clickHandler);\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (isErrorProceed) {\r\n            setIsError(false);\r\n            setIsErrorProceed(false);\r\n            setSelectedOption(tempSelectedOption);\r\n            setIsMenuOpen(false);\r\n            props.setRegion(tempSelectedOption.value);\r\n            props.setImage(1);\r\n        }\r\n    }, [isErrorProceed]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Select\">\r\n                <button\r\n                    className=\"drop-down-button\"\r\n                    disabled={props.activeTab !== 1 && props.image !== undefined}\r\n                    onClick={(): void => setIsMenuOpen((state) => !state)}\r\n                >\r\n                    <div className=\"drop-down-button-label\">{selectedOption.label}</div>\r\n                    <span className=\"dropdown-indicator\">\r\n                        <img\r\n                            src={isMenuOpen ? chevronUp : chevronDown}\r\n                            alt={`dropdown indicator ${isMenuOpen ? 'up' : 'down'}`}\r\n                        />\r\n                    </span>\r\n                </button>\r\n                {isMenuOpen && (\r\n                    <div className=\"drop-down-menu\">\r\n                        <ul className=\"drop-down-menu-list\" role=\"menu\">\r\n                            {options.map((option: SelectOptionInterface) => (\r\n                                <SelectMenuOption option={option} key={option.value} onSelect={onOptionSelect} />\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"ErrorMessageDialog\">\r\n                {isError ? (\r\n                    <ErrorMessageDialog\r\n                        message={message}\r\n                        setIsError={setIsError}\r\n                        setIsErrorProceed={setIsErrorProceed}\r\n                    />\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Select;\r\n\r\nconst SelectMenuOption: React.FC<SelectMenuOptionInterface> = (props: SelectMenuOptionInterface) => {\r\n    const { option, onSelect } = props;\r\n\r\n    const onItemClick = (): void => onSelect(option);\r\n\r\n    return (\r\n        <li className=\"menu-list-item\" onClick={onItemClick} role=\"option\" aria-selected=\"true\">\r\n            {option.label}\r\n        </li>\r\n    );\r\n};\r\n",[],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\reviewContent\\ReviewContent.tsx",["159","160"],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\imageCard\\imageCard.tsx",["161","162","163","164","165"],"import React from 'react';\r\nimport './imageCard.css';\r\nimport { RadioButtonInterface, RadioButton } from '../radioButton/RadioButton';\r\n\r\nexport interface ImageCardPropsInterface {\r\n    imageCards: ImageCardInterface[];\r\n    region: number;\r\n    setImage: any;\r\n    setBits: any;\r\n    activeTab: number;\r\n}\r\n\r\nexport interface ImageCardItemPropsInterface {\r\n    imageCard: ImageCardInterface;\r\n    setImage: any;\r\n    setBits: any;\r\n    activeTab: number;\r\n}\r\n\r\nexport interface ImageCardInterface {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    bitItems: string[];\r\n    price: number;\r\n    region: number;\r\n}\r\n\r\nexport const ImageCard: React.FC<ImageCardPropsInterface> = (props: ImageCardPropsInterface) => {\r\n    const imageCards: ImageCardInterface[] = props.imageCards;\r\n\r\n    return (\r\n        <div className=\"Image-card\">\r\n            <ul className=\"Image-card-list\">\r\n                {imageCards.map((imageCard: ImageCardInterface) => {\r\n                    return props.region <= imageCard.region ? (\r\n                        <ImageCardItem\r\n                            key={imageCard.id}\r\n                            imageCard={imageCard}\r\n                            setImage={props.setImage}\r\n                            setBits={props.setBits}\r\n                            activeTab={props.activeTab}\r\n                        />\r\n                    ) : null;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ImageCardItem: React.FC<ImageCardItemPropsInterface> = (props: ImageCardItemPropsInterface) => {\r\n    const imageCard: ImageCardInterface = props.imageCard;\r\n    return (\r\n        <div className=\"ImageCardItem\">\r\n            <div className=\"Image-div\">\r\n                <img src=\"../../assets/todo.png\" />\r\n            </div>\r\n            <div className=\"Content-div\">\r\n                <h3>{imageCard.title}</h3>\r\n                <label>{imageCard.description}</label>\r\n            </div>\r\n            <div className=\"Bits-div\">\r\n                <RadioButton radioButtons={imageCard.bitItems} buttonItem={imageCard.id} setBits={props.setBits} />\r\n                {props.activeTab === 1 ? (\r\n                    <button\r\n                        className=\"select-button\"\r\n                        onClick={() => {\r\n                            props.setImage(imageCard.id);\r\n                        }}\r\n                    >\r\n                        Select\r\n                    </button>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\errorMessageDialog\\ErrorMessageDialog.tsx",["166","167"],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\tab\\tab.tsx",[],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\radioButton\\RadioButton.tsx",["168","169"],"C:\\users\\mohan\\Angular-workspace\\hu2020-todoapp\\src\\component\\instanceLayout\\InstanceLayout.tsx",["170","171","172"],"import React from 'react';\r\nimport './InstanceLayout.css';\r\nimport Select, { SelectOptionInterface } from '../select/select';\r\nimport { ErrorMessageDialog } from '../errorMessageDialog/ErrorMessageDialog';\r\n\r\ninterface InstanceLayoutPropsInteface {\r\n    activeTab: number;\r\n    instanceTypeCards: InstanceTypesInterface[];\r\n    setInstanceType: any;\r\n    instanceType: number;\r\n    setMemory: any;\r\n    setCore: any;\r\n    memory: string;\r\n    core: string;\r\n}\r\ninterface InstanceTypesInterface {\r\n    id: number;\r\n    type: string;\r\n    memory: number;\r\n    cpu: number;\r\n}\r\nexport const InstanceLayout: React.FC<InstanceLayoutPropsInteface> = (props: InstanceLayoutPropsInteface) => {\r\n    const instanceTypeCards = props.instanceTypeCards;\r\n\r\n    const memoryValues = [\r\n        ['256MB', '512MB', '1GB', '2GB', '4GB'],\r\n        ['16GB', '32GB', '64GB'],\r\n        ['256MB', '512MB', '1GB', '2GB', '4GB', '16GB', '32GB', '64GB'],\r\n    ];\r\n    const coreValues = [\r\n        ['1 Core', '2 Core', '4 Core'],\r\n        ['1 Core', '8 Core', '16 Core'],\r\n        ['1 Core', '2 Core', '8 Core', '16 Core'],\r\n        ['1 Core', '2 Core', '4 Core', '8 Core', '16 Core'],\r\n    ];\r\n\r\n    const fetchMemoryOptions = (): SelectOptionInterface[] => {\r\n        return memoryValues[instanceTypeCards[props.instanceType - 1].memory].map(\r\n            (memory, index): SelectOptionInterface => ({ label: memory, value: index }),\r\n        );\r\n    };\r\n\r\n    const fetchCoreOptions = (): SelectOptionInterface[] => {\r\n        return coreValues[instanceTypeCards[props.instanceType - 1].cpu].map((cpu, index) => ({\r\n            label: cpu,\r\n            value: index,\r\n        }));\r\n    };\r\n\r\n    const [coreOptions, setCoreOptions] = React.useState<SelectOptionInterface[]>(fetchCoreOptions());\r\n    const [memoryOptions, setMemoryOptions] = React.useState<SelectOptionInterface[]>(fetchMemoryOptions());\r\n    const [tempMemory, setTempMemory] = React.useState<SelectOptionInterface>({ label: props.memory, value: 0 });\r\n    const [tempCore, setTempCore] = React.useState<SelectOptionInterface>({ label: props.core, value: 0 });\r\n    const [coreSelected, setCoreSelected] = React.useState(0);\r\n    const [memorySelected, setMemorySelected] = React.useState(0);\r\n\r\n    const [isErrorProceed, setIsErrorProceed] = React.useState(false);\r\n    const [isError, setIsError] = React.useState(false);\r\n    const [tempInstanceId, setTempInstanceId] = React.useState(props.instanceType);\r\n\r\n    const [errorMessage, setErrorMessage] = React.useState('If you proceed you may lose data');\r\n\r\n    React.useEffect(() => {\r\n        if (isErrorProceed) {\r\n            props.setInstanceType(tempInstanceId);\r\n            setIsError(false);\r\n            setIsErrorProceed(false);\r\n        }\r\n    }, [isErrorProceed]);\r\n\r\n    React.useEffect(() => {\r\n        onInstanceChange();\r\n    }, [props.instanceType]);\r\n\r\n    const checkError = (id: number): void => {\r\n        const newMemoryList: string[] = memoryValues[instanceTypeCards[id - 1].memory];\r\n        const newCoreList: string[] = coreValues[instanceTypeCards[id - 1].cpu];\r\n        const newMemoryIndex = newMemoryList.indexOf(props.memory);\r\n        const newCoreIndex = newCoreList.indexOf(props.core);\r\n        const isMemory = !newMemoryList.includes(props.memory);\r\n        const isCore = !newCoreList.includes(props.core);\r\n        if (isMemory && isCore) {\r\n            setErrorMessage(\r\n                props.memory + ' and ' + props.core + ' is not available for ' + instanceTypeCards[id - 1].type,\r\n            );\r\n            setTempInstanceId(id);\r\n            setTempMemory({ label: newMemoryList[0], value: 0 });\r\n            setTempCore({ label: newCoreList[0], value: 0 });\r\n            setIsError(true);\r\n        } else if (isCore) {\r\n            setErrorMessage(props.core + ' is not available for ' + instanceTypeCards[id - 1].type);\r\n            setTempInstanceId(id);\r\n            setTempMemory({ label: props.memory, value: newMemoryIndex });\r\n            setTempCore({ label: newCoreList[0], value: 0 });\r\n            setIsError(true);\r\n        } else if (isMemory) {\r\n            setErrorMessage(props.memory + ' is not available for ' + instanceTypeCards[id - 1].type);\r\n            setTempInstanceId(id);\r\n            setTempMemory({ label: newMemoryList[0], value: 0 });\r\n            setTempCore({ label: props.core, value: newCoreIndex });\r\n            setIsError(true);\r\n        } else {\r\n            props.setInstanceType(id);\r\n            setTempMemory({ label: props.memory, value: newMemoryIndex });\r\n            setTempCore({ label: props.core, value: newCoreIndex });\r\n        }\r\n    };\r\n\r\n    const onInstanceChange = (): void => {\r\n        const memorySelectValues: SelectOptionInterface[] = fetchMemoryOptions();\r\n        const coreSelectValues: SelectOptionInterface[] = fetchCoreOptions();\r\n        setCoreOptions(coreSelectValues);\r\n        setMemoryOptions(memorySelectValues);\r\n        props.setCore(tempCore.label);\r\n        props.setMemory(tempMemory.label);\r\n        setCoreSelected(tempCore.value);\r\n        setMemorySelected(tempMemory.value);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const coreLabel = coreValues[instanceTypeCards[props.instanceType - 1].cpu][coreSelected];\r\n        props.setCore(coreLabel);\r\n    }, [coreSelected]);\r\n\r\n    React.useEffect(() => {\r\n        const memoryLabel = memoryValues[instanceTypeCards[props.instanceType - 1].memory][memorySelected];\r\n        props.setMemory(memoryLabel);\r\n    }, [memorySelected]);\r\n\r\n    return (\r\n        <div className=\"Instance-Layout\">\r\n            <div className=\"Instance-type-div\">\r\n                <ul className=\"Instance-type-list\">\r\n                    {instanceTypeCards.map((instanceTypeItem: { id: number; type: string }) => (\r\n                        <button\r\n                            key={instanceTypeItem.id}\r\n                            className=\"Instance-type-button\"\r\n                            onClick={() => checkError(instanceTypeItem.id)}\r\n                        >\r\n                            {instanceTypeItem.type}\r\n                        </button>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"Configuration\">\r\n                <h4>Create Configuration</h4>\r\n                <div className=\"Cpu-Memory-div\">\r\n                    <div className=\"Select-div\">\r\n                        <Select\r\n                            options={coreOptions}\r\n                            setRegion={setCoreSelected}\r\n                            default={coreOptions[0]}\r\n                            activeTab={props.activeTab}\r\n                        />\r\n                    </div>\r\n                    <div className=\"Select-div\">\r\n                        <Select\r\n                            options={memoryOptions}\r\n                            setRegion={setMemorySelected}\r\n                            default={memoryOptions[0]}\r\n                            activeTab={props.activeTab}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ErrorMessageDialog\">\r\n                {isError ? (\r\n                    <ErrorMessageDialog\r\n                        message={errorMessage}\r\n                        setIsError={setIsError}\r\n                        setIsErrorProceed={setIsErrorProceed}\r\n                    />\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\instanceLayout\\InstanceLayout.tsx",["173","174","175","176"],"import React from 'react';\r\nimport './InstanceLayout.css';\r\nimport Select, { SelectOptionInterface } from '../select/select';\r\nimport { ErrorMessageDialog } from '../errorMessageDialog/ErrorMessageDialog';\r\n\r\ninterface InstanceLayoutPropsInteface {\r\n    activeTab: number;\r\n    instanceTypeCards: InstanceTypesInterface[];\r\n    setInstanceType: any;\r\n    instanceType: number;\r\n    coreItem: SelectOptionInterface;\r\n    updateCore: any;\r\n    memoryItem: SelectOptionInterface;\r\n    updateMemory: any;\r\n    bandwidth: number;\r\n    setBandwidth: any;\r\n}\r\ninterface InstanceTypesInterface {\r\n    id: number;\r\n    type: string;\r\n    memory: number;\r\n    cpu: number;\r\n}\r\nexport const InstanceLayout: React.FC<InstanceLayoutPropsInteface> = (props: InstanceLayoutPropsInteface) => {\r\n    const instanceTypeCards = props.instanceTypeCards;\r\n\r\n    const memoryValues = [\r\n        ['256MB', '512MB', '1GB', '2GB', '4GB'],\r\n        ['16GB', '32GB', '64GB'],\r\n        ['256MB', '512MB', '1GB', '2GB', '4GB', '16GB', '32GB', '64GB'],\r\n    ];\r\n    const coreValues = [\r\n        ['1 Core', '2 Core', '4 Core'],\r\n        ['1 Core', '8 Core', '16 Core'],\r\n        ['1 Core', '2 Core', '8 Core', '16 Core'],\r\n        ['1 Core', '2 Core', '4 Core', '8 Core', '16 Core'],\r\n    ];\r\n\r\n    const fetchMemoryOptions = (): SelectOptionInterface[] => {\r\n        return memoryValues[instanceTypeCards[props.instanceType - 1].memory].map(\r\n            (memory, index): SelectOptionInterface => ({ label: memory, value: index }),\r\n        );\r\n    };\r\n\r\n    const fetchCoreOptions = (): SelectOptionInterface[] => {\r\n        return coreValues[instanceTypeCards[props.instanceType - 1].cpu].map((cpu, index) => ({\r\n            label: cpu,\r\n            value: index,\r\n        }));\r\n    };\r\n\r\n    const [coreOptions, setCoreOptions] = React.useState<SelectOptionInterface[]>(fetchCoreOptions());\r\n    const [memoryOptions, setMemoryOptions] = React.useState<SelectOptionInterface[]>(fetchMemoryOptions());\r\n    const [coreSelected, setCoreSelected] = React.useState<SelectOptionInterface>(props.coreItem);\r\n    const [memorySelected, setMemorySelected] = React.useState<SelectOptionInterface>(props.memoryItem);\r\n    const [tempMemory, setTempMemory] = React.useState<SelectOptionInterface>(memorySelected);\r\n    const [tempCore, setTempCore] = React.useState<SelectOptionInterface>(coreSelected);\r\n    const [coreIndex, setCoreIndex] = React.useState(coreSelected.value);\r\n    const [memoryIndex, setMemoryIndex] = React.useState(memorySelected.value);\r\n\r\n    const [isErrorProceed, setIsErrorProceed] = React.useState(false);\r\n    const [isError, setIsError] = React.useState(false);\r\n    const [isBandwidthError, setIsBandwidthError] = React.useState(false);\r\n    const [tempInstanceId, setTempInstanceId] = React.useState(props.instanceType);\r\n\r\n    const [errorMessage, setErrorMessage] = React.useState('If you proceed you may lose data');\r\n\r\n    const bandwidthErrorMessage = 'Outbound network transfer range for this instance is 512 GB - 1 TB only.';\r\n    React.useEffect(() => {\r\n        if (isErrorProceed) {\r\n            props.setInstanceType(tempInstanceId);\r\n            if (isBandwidthError) {\r\n                props.setBandwidth(1000);\r\n                setIsBandwidthError(false);\r\n            }\r\n            setIsError(false);\r\n            setIsErrorProceed(false);\r\n        }\r\n    }, [isErrorProceed]);\r\n\r\n    React.useEffect(() => {\r\n        onInstanceChange();\r\n    }, [props.instanceType]);\r\n\r\n    const checkBandwidthError = (id: number): void => {\r\n        if (props.bandwidth > 1000 && id < 4) {\r\n            setIsBandwidthError(true);\r\n            checkError(id, true);\r\n        } else {\r\n            checkError(id, false);\r\n        }\r\n    };\r\n    const checkError = (id: number, isBwError: boolean): void => {\r\n        const newMemoryList: string[] = memoryValues[instanceTypeCards[id - 1].memory];\r\n        const newCoreList: string[] = coreValues[instanceTypeCards[id - 1].cpu];\r\n        const newMemoryIndex = newMemoryList.indexOf(props.memoryItem.label);\r\n        const newCoreIndex = newCoreList.indexOf(props.coreItem.label);\r\n        const isMemory = !newMemoryList.includes(props.memoryItem.label);\r\n        const isCore = !newCoreList.includes(props.coreItem.label);\r\n        const additionalMessage: string = isBwError ? bandwidthErrorMessage : '';\r\n        if (isMemory && isCore) {\r\n            setErrorMessage(\r\n                additionalMessage +\r\n                    props.memoryItem.label +\r\n                    ' and ' +\r\n                    props.coreItem.label +\r\n                    ' is not available for ' +\r\n                    instanceTypeCards[id - 1].type,\r\n            );\r\n            setTempInstanceId(id);\r\n            setTempMemory({ label: newMemoryList[0], value: 0 });\r\n            setTempCore({ label: newCoreList[0], value: 0 });\r\n            setIsError(true);\r\n        } else if (isCore) {\r\n            setErrorMessage(\r\n                additionalMessage + props.coreItem.label + ' is not available for ' + instanceTypeCards[id - 1].type,\r\n            );\r\n            setTempInstanceId(id);\r\n            setTempMemory({ label: props.memoryItem.label, value: newMemoryIndex });\r\n            setTempCore({ label: newCoreList[0], value: 0 });\r\n            setIsError(true);\r\n        } else if (isMemory) {\r\n            setErrorMessage(\r\n                additionalMessage + props.memoryItem.label + ' is not available for ' + instanceTypeCards[id - 1].type,\r\n            );\r\n            setTempInstanceId(id);\r\n            setTempMemory({ label: newMemoryList[0], value: 0 });\r\n            setTempCore({ label: props.coreItem.label, value: newCoreIndex });\r\n            setIsError(true);\r\n        } else if (isBandwidthError) {\r\n            setErrorMessage(bandwidthErrorMessage);\r\n            setTempInstanceId(id);\r\n            setTempMemory({ label: props.memoryItem.label, value: newMemoryIndex });\r\n            setTempCore({ label: props.coreItem.label, value: newCoreIndex });\r\n            setIsError(true);\r\n        } else {\r\n            props.setInstanceType(id);\r\n            setTempMemory({ label: props.memoryItem.label, value: newMemoryIndex });\r\n            setTempCore({ label: props.coreItem.label, value: newCoreIndex });\r\n        }\r\n    };\r\n\r\n    const onInstanceChange = (): void => {\r\n        const memorySelectValues: SelectOptionInterface[] = fetchMemoryOptions();\r\n        const coreSelectValues: SelectOptionInterface[] = fetchCoreOptions();\r\n        setCoreOptions(coreSelectValues);\r\n        setMemoryOptions(memorySelectValues);\r\n        props.updateCore(tempCore);\r\n        props.updateMemory(tempMemory);\r\n        setCoreSelected(tempCore);\r\n        setMemorySelected(tempMemory);\r\n    };\r\n\r\n    const updateCoreSelected = (coreValue: SelectOptionInterface): void => {\r\n        setCoreSelected(coreValue);\r\n    };\r\n\r\n    const updateMemorySelected = (memoryValue: SelectOptionInterface): void => {\r\n        setMemorySelected(memoryValue);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const coreLabel = coreValues[instanceTypeCards[props.instanceType - 1].cpu][coreIndex];\r\n        updateCoreSelected({ label: coreLabel, value: coreIndex });\r\n    }, [coreIndex]);\r\n\r\n    React.useEffect(() => {\r\n        const memoryLabel = memoryValues[instanceTypeCards[props.instanceType - 1].memory][memoryIndex];\r\n        updateMemorySelected({ label: memoryLabel, value: memoryIndex });\r\n    }, [memoryIndex]);\r\n\r\n    React.useEffect(() => {\r\n        props.updateCore(coreSelected);\r\n    }, [coreSelected]);\r\n\r\n    React.useEffect(() => {\r\n        props.updateMemory(memorySelected);\r\n    }, [memorySelected]);\r\n\r\n    return (\r\n        <div className=\"Instance-Layout\">\r\n            <div className=\"Instance-type-div\">\r\n                <ul className=\"Instance-type-list\">\r\n                    {instanceTypeCards.map((instanceTypeItem: { id: number; type: string }) => (\r\n                        <button\r\n                            key={instanceTypeItem.id}\r\n                            className={\r\n                                props.instanceType === instanceTypeItem.id\r\n                                    ? 'Instance-type-button-selected'\r\n                                    : 'Instance-type-button'\r\n                            }\r\n                            onClick={() => {\r\n                                checkBandwidthError(instanceTypeItem.id);\r\n                            }}\r\n                        >\r\n                            {instanceTypeItem.type}\r\n                        </button>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"Configuration\">\r\n                <h4>Create Configuration</h4>\r\n                <div className=\"Cpu-Memory-div\">\r\n                    <div className=\"Select-div\">\r\n                        <Select\r\n                            key={coreSelected.label}\r\n                            options={coreOptions}\r\n                            setRegion={setCoreIndex}\r\n                            default={coreSelected}\r\n                            activeTab={props.activeTab}\r\n                            disabled={false}\r\n                        />\r\n                    </div>\r\n                    <div className=\"Select-div\">\r\n                        <Select\r\n                            key={memorySelected.label}\r\n                            options={memoryOptions}\r\n                            setRegion={setMemoryIndex}\r\n                            default={memorySelected}\r\n                            activeTab={props.activeTab}\r\n                            disabled={false}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ErrorMessageDialog\">\r\n                {isError ? (\r\n                    <ErrorMessageDialog\r\n                        message={errorMessage}\r\n                        setIsError={setIsError}\r\n                        setIsErrorProceed={setIsErrorProceed}\r\n                    />\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\storageNetworkLayout\\StorageNetworkLayout.tsx",["177","178"],"import React from 'react';\r\nimport './StorageNetworkLayout.css';\r\nimport { StorageCardItemInterface, StorageCard } from '../storageCard/storageCard';\r\nimport { SelectOptionInterface } from '../select/select';\r\nimport { RangeSlider } from '../rangeSlider/RangeSlider';\r\n\r\ninterface StorageNetworkPropsInterface {\r\n    storageCards: StorageCardItemInterface[];\r\n    typeItems: SelectOptionInterface[];\r\n    activeTab: number;\r\n    addStorageCard: any;\r\n    bandwidth: number;\r\n    setBandwidth: any;\r\n    selectedInstanceType: number;\r\n}\r\n\r\nexport const StorageNetworkLayout: React.FC<StorageNetworkPropsInterface> = (props: StorageNetworkPropsInterface) => {\r\n    const [storageCardItems, setStorageCardItems] = React.useState<StorageCardItemInterface[]>(props.storageCards);\r\n    const defaultAdditionalCard: StorageCardItemInterface = {\r\n        type: { label: 'Magnetic Disks', value: 0 },\r\n        volume: 'Ext',\r\n        capacity: 120,\r\n        isEncryption: true,\r\n        iops: 600,\r\n        isBackupRequired: true,\r\n        remarks: 'Some Remarks',\r\n    };\r\n    const addStorageCardItem = (storageCardList: StorageCardItemInterface[]): void => {\r\n        setStorageCardItems(storageCardList);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        props.addStorageCard(storageCardItems);\r\n    }, [storageCardItems]);\r\n\r\n    const addVolumeClick = (): void => {\r\n        const temp = storageCardItems.map((storageInformation) => storageInformation);\r\n        temp.push(defaultAdditionalCard);\r\n        setStorageCardItems(temp);\r\n    };\r\n\r\n    return (\r\n        <div className=\"StorageNetworkLayout\">\r\n            <div className=\"Storage-card-div\">\r\n                <StorageCard\r\n                    key={storageCardItems.length}\r\n                    storageCards={storageCardItems}\r\n                    activeTab={props.activeTab}\r\n                    typeItems={props.typeItems}\r\n                    addStorageCard={addStorageCardItem}\r\n                />\r\n                <div className=\"Add-volume-div\">\r\n                    <button className=\"Add-volume-button\" onClick={() => addVolumeClick()}>\r\n                        Add Volume\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"Bandwidth-div\">\r\n                <h3>Network Bandwidth Configuration</h3>\r\n                <label>Outbound Traffic (GB)</label>\r\n                <RangeSlider\r\n                    bandwidth={props.bandwidth}\r\n                    setBandwidth={props.setBandwidth}\r\n                    selectedInstanceType={props.selectedInstanceType}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\storageCard\\storageCard.tsx",["179","180","181","182","183"],"import React from 'react';\r\nimport './storageCard.css';\r\nimport Select, { SelectOptionInterface } from '../select/select';\r\nimport close from '../../assets/images/close.svg';\r\n\r\ninterface StorageCardPropsInterface {\r\n    key: number;\r\n    storageCards: StorageCardItemInterface[];\r\n    activeTab: number;\r\n    typeItems: SelectOptionInterface[];\r\n    addStorageCard: any;\r\n}\r\n\r\ninterface StorageCardItemPropsInterface {\r\n    storageCard: StorageCardItemInterface;\r\n    activeTab: number;\r\n    typeItems: SelectOptionInterface[];\r\n    index: number;\r\n    editStorageCardItem: any;\r\n}\r\n\r\nexport interface StorageCardItemInterface {\r\n    type: SelectOptionInterface;\r\n    volume: string;\r\n    capacity: number;\r\n    isEncryption: boolean;\r\n    iops: number;\r\n    isBackupRequired: boolean;\r\n    remarks: string;\r\n}\r\n\r\nexport const StorageCard: React.FC<StorageCardPropsInterface> = (props: StorageCardPropsInterface) => {\r\n    const [storageCardsValues, setStorageCardValues] = React.useState<StorageCardItemInterface[]>(props.storageCards);\r\n    const defaultAdditionalCard: StorageCardItemInterface = {\r\n        type: { label: 'Magnetic Disks', value: 0 },\r\n        volume: 'Ext',\r\n        capacity: 120,\r\n        isEncryption: true,\r\n        iops: 600,\r\n        isBackupRequired: true,\r\n        remarks: 'Some Remarks',\r\n    };\r\n    const editStorageCardItem = (index: number, storageCard: StorageCardItemInterface): void => {\r\n        const temp = storageCardsValues.map((storageInformation, valueIndex) =>\r\n            index === valueIndex ? storageCard : storageInformation,\r\n        );\r\n        setStorageCardValues(temp);\r\n    };\r\n\r\n    const removeStorageItem = (index: number): void => {\r\n        const temp = storageCardsValues.filter((storageInformation, valueIndex) => valueIndex !== index);\r\n        setStorageCardValues(temp);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        props.addStorageCard(storageCardsValues);\r\n    }, [storageCardsValues]);\r\n\r\n    return (\r\n        <div className=\"Storage-card\">\r\n            <ul className=\"Storage-card-list\">\r\n                {storageCardsValues.map((storageCard: StorageCardItemInterface, index) => {\r\n                    return (\r\n                        <div key={index} className=\"Inner-storage-card-list\">\r\n                            <StorageCardItem\r\n                                key={index}\r\n                                index={index}\r\n                                storageCard={storageCard}\r\n                                activeTab={props.activeTab}\r\n                                typeItems={props.typeItems}\r\n                                editStorageCardItem={editStorageCardItem}\r\n                            />\r\n                            {index !== 0 && props.activeTab !== 5 ? (\r\n                                <button\r\n                                    className=\"close-button\"\r\n                                    onClick={() => {\r\n                                        removeStorageItem(index);\r\n                                    }}\r\n                                >\r\n                                    <span className=\"close-icon\">\r\n                                        <img src={close} alt=\"close\" />\r\n                                    </span>\r\n                                </button>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst StorageCardItem: React.FC<StorageCardItemPropsInterface> = (props: StorageCardItemPropsInterface) => {\r\n    const [storageCard, setStorageCard] = React.useState<StorageCardItemInterface>(props.storageCard);\r\n    const [type, setType] = React.useState(storageCard.type.value);\r\n    const [isEncrypt, setIsEncrypt] = React.useState(storageCard.isEncryption);\r\n    const [isBackup, setIsBackup] = React.useState(storageCard.isBackupRequired);\r\n    const [capacity, setCapacity] = React.useState(storageCard.capacity);\r\n    const [iops, setIops] = React.useState(storageCard.iops);\r\n    const [remarks, setRemarks] = React.useState(storageCard.remarks);\r\n\r\n    React.useEffect(() => {\r\n        const card: StorageCardItemInterface = {\r\n            type: props.typeItems[type],\r\n            volume: storageCard.volume,\r\n            capacity: capacity,\r\n            isEncryption: isEncrypt,\r\n            iops: iops,\r\n            isBackupRequired: isBackup,\r\n            remarks: remarks,\r\n        };\r\n        setStorageCard(card);\r\n    }, [type, isEncrypt, isBackup, capacity, iops, remarks]);\r\n\r\n    React.useEffect(() => {\r\n        props.editStorageCardItem(props.index, storageCard);\r\n    }, [storageCard]);\r\n\r\n    return (\r\n        <div className=\"StorageCardItem\">\r\n            <div className=\"Storage-div\">\r\n                <h5>Type</h5>\r\n                <Select\r\n                    key={storageCard.type.label}\r\n                    options={props.typeItems}\r\n                    setRegion={setType}\r\n                    default={storageCard.type}\r\n                    activeTab={props.activeTab}\r\n                    disabled={props.activeTab === 5}\r\n                    capacity={capacity}\r\n                    setCapacity={setCapacity}\r\n                />\r\n            </div>\r\n            <div className=\"Storage-div\">\r\n                <h5>Volume</h5>\r\n                <label>{storageCard.volume}</label>\r\n            </div>\r\n            <div className=\"Storage-div\">\r\n                <h5>Capacity (GB)</h5>\r\n                <input\r\n                    defaultValue={capacity}\r\n                    type=\"number\"\r\n                    min={type == 0 ? 40 : 20}\r\n                    max={type == 0 ? 2000 : 512}\r\n                    disabled={props.activeTab === 5}\r\n                    onChange={(e: any) => {\r\n                        const capacityEntered = e.target.value;\r\n                        if (type == 0 && capacityEntered < 40) {\r\n                            e.target.value = 40;\r\n                            setCapacity(40);\r\n                        } else if (type == 0 && capacityEntered > 2000) {\r\n                            e.target.value = 2000;\r\n                            setCapacity(2000);\r\n                        } else if (type == 1 && capacityEntered < 20) {\r\n                            e.target.value = 20;\r\n                            setCapacity(20);\r\n                        } else if (type == 1 && capacityEntered > 512) {\r\n                            e.target.value = 512;\r\n                            setCapacity(512);\r\n                        } else {\r\n                            setCapacity(capacityEntered);\r\n                        }\r\n                        let vol: number = capacityEntered > 500 ? 1000 : iops;\r\n                        vol = capacityEntered < 100 ? 100 : vol;\r\n                        vol = capacityEntered >= 100 && capacityEntered <= 500 ? 600 : vol;\r\n                        setIops(vol);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"Storage-div\">\r\n                <h5>Encryption</h5>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={0}\r\n                    disabled={props.activeTab === 5}\r\n                    defaultChecked={isEncrypt}\r\n                    onClick={() => setIsEncrypt(!isEncrypt)}\r\n                />\r\n            </div>\r\n            <div className=\"Storage-div\">\r\n                <h5>IOPS</h5>\r\n                <label>{iops}</label>\r\n            </div>\r\n            <div className=\"Storage-div\">\r\n                <h5>Backup Required</h5>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={0}\r\n                    disabled={props.activeTab === 5}\r\n                    defaultChecked={isBackup}\r\n                    onClick={() => setIsBackup(!isBackup)}\r\n                />\r\n            </div>\r\n            <div className=\"Storage-div\">\r\n                <h5>Remarks</h5>\r\n                <input\r\n                    defaultValue={remarks}\r\n                    type=\"string\"\r\n                    disabled={props.activeTab === 5}\r\n                    onChange={(e: any) => {\r\n                        setRemarks(e.target.value);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\MOHAN\\Angular-workspace\\hu2020-todoapp\\src\\component\\rangeSlider\\RangeSlider.tsx",["184"],"import React from 'react';\r\nimport './RangeSlider.css';\r\n\r\ninterface RangeSliderPropsInterface {\r\n    bandwidth: number;\r\n    setBandwidth: any;\r\n    selectedInstanceType: number;\r\n}\r\nexport const RangeSlider: React.FC<RangeSliderPropsInterface> = (props: RangeSliderPropsInterface) => {\r\n    return (\r\n        <div className=\"RangeSlider\">\r\n            <input\r\n                type=\"range\"\r\n                role=\"slider\"\r\n                min={512}\r\n                max={props.selectedInstanceType === 4 ? 2000 : 1000}\r\n                value={props.bandwidth}\r\n                onChange={({ target: { value: radius } }) => props.setBandwidth(radius)}\r\n            ></input>\r\n            <div className=\"buble\">{props.bandwidth}</div>\r\n        </div>\r\n    );\r\n};\r\n",{"ruleId":"185","severity":1,"message":"186","line":3,"column":25,"nodeType":"187","messageId":"188","endLine":3,"endColumn":57},{"ruleId":"189","severity":1,"message":"190","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":5,"column":1,"nodeType":"193","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"189","severity":1,"message":"194","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"195","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":33},{"ruleId":"189","severity":1,"message":"196","line":7,"column":10,"nodeType":"191","messageId":"192","endLine":7,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":12,"column":14,"nodeType":"187","messageId":"188","endLine":12,"endColumn":29},{"ruleId":"185","severity":1,"message":"197","line":12,"column":15,"nodeType":"191","messageId":"198","endLine":12,"endColumn":25},{"ruleId":"189","severity":1,"message":"199","line":12,"column":15,"nodeType":"191","messageId":"192","endLine":12,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":12,"column":22,"nodeType":"202","messageId":"203","endLine":12,"endColumn":25,"suggestions":"204"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":16,"nodeType":"202","messageId":"203","endLine":11,"endColumn":19,"suggestions":"205"},{"ruleId":"200","severity":1,"message":"201","line":14,"column":16,"nodeType":"202","messageId":"203","endLine":14,"endColumn":19,"suggestions":"206"},{"ruleId":"200","severity":1,"message":"201","line":16,"column":19,"nodeType":"202","messageId":"203","endLine":16,"endColumn":22,"suggestions":"207"},{"ruleId":"189","severity":1,"message":"208","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":8,"column":15,"nodeType":"202","messageId":"203","endLine":8,"endColumn":18,"suggestions":"209"},{"ruleId":"200","severity":1,"message":"201","line":9,"column":14,"nodeType":"202","messageId":"203","endLine":9,"endColumn":17,"suggestions":"210"},{"ruleId":"200","severity":1,"message":"201","line":15,"column":15,"nodeType":"202","messageId":"203","endLine":15,"endColumn":18,"suggestions":"211"},{"ruleId":"200","severity":1,"message":"201","line":16,"column":14,"nodeType":"202","messageId":"203","endLine":16,"endColumn":17,"suggestions":"212"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":14,"nodeType":"202","messageId":"203","endLine":7,"endColumn":17,"suggestions":"213"},{"ruleId":"200","severity":1,"message":"201","line":14,"column":14,"nodeType":"202","messageId":"203","endLine":14,"endColumn":17,"suggestions":"214"},{"ruleId":"200","severity":1,"message":"201","line":10,"column":15,"nodeType":"202","messageId":"203","endLine":10,"endColumn":18,"suggestions":"215"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":14,"nodeType":"202","messageId":"203","endLine":11,"endColumn":17,"suggestions":"216"},{"ruleId":"200","severity":1,"message":"201","line":20,"column":19,"nodeType":"202","messageId":"203","endLine":20,"endColumn":22,"suggestions":"217"},{"ruleId":"189","severity":1,"message":"218","line":30,"column":29,"nodeType":"191","messageId":"192","endLine":30,"endColumn":72},{"ruleId":"200","severity":1,"message":"201","line":7,"column":17,"nodeType":"202","messageId":"203","endLine":7,"endColumn":20,"suggestions":"219"},{"ruleId":"200","severity":1,"message":"201","line":8,"column":24,"nodeType":"202","messageId":"203","endLine":8,"endColumn":27,"suggestions":"220"},{"ruleId":"185","severity":1,"message":"186","line":3,"column":25,"nodeType":"187","messageId":"188","endLine":3,"endColumn":57},{"ruleId":"189","severity":1,"message":"190","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":5,"column":1,"nodeType":"193","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"189","severity":1,"message":"194","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"221","line":3,"column":18,"nodeType":"191","messageId":"192","endLine":3,"endColumn":39},{"ruleId":"189","severity":1,"message":"195","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":10,"column":14,"nodeType":"187","messageId":"188","endLine":10,"endColumn":29},{"ruleId":"185","severity":1,"message":"197","line":10,"column":15,"nodeType":"191","messageId":"198","endLine":10,"endColumn":25},{"ruleId":"189","severity":1,"message":"199","line":10,"column":15,"nodeType":"191","messageId":"192","endLine":10,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":10,"column":22,"nodeType":"202","messageId":"203","endLine":10,"endColumn":25,"suggestions":"222"},{"ruleId":"189","severity":1,"message":"223","line":85,"column":21,"nodeType":"191","messageId":"192","endLine":85,"endColumn":31},{"ruleId":"200","severity":1,"message":"201","line":10,"column":16,"nodeType":"202","messageId":"203","endLine":10,"endColumn":19,"suggestions":"224"},{"ruleId":"200","severity":1,"message":"201","line":13,"column":16,"nodeType":"202","messageId":"203","endLine":13,"endColumn":19,"suggestions":"225"},{"ruleId":"200","severity":1,"message":"201","line":8,"column":15,"nodeType":"202","messageId":"203","endLine":8,"endColumn":18,"suggestions":"226"},{"ruleId":"200","severity":1,"message":"201","line":9,"column":14,"nodeType":"202","messageId":"203","endLine":9,"endColumn":17,"suggestions":"227"},{"ruleId":"189","severity":1,"message":"208","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":8,"column":15,"nodeType":"202","messageId":"203","endLine":8,"endColumn":18,"suggestions":"228"},{"ruleId":"200","severity":1,"message":"201","line":9,"column":14,"nodeType":"202","messageId":"203","endLine":9,"endColumn":17,"suggestions":"229"},{"ruleId":"200","severity":1,"message":"201","line":15,"column":15,"nodeType":"202","messageId":"203","endLine":15,"endColumn":18,"suggestions":"230"},{"ruleId":"200","severity":1,"message":"201","line":16,"column":14,"nodeType":"202","messageId":"203","endLine":16,"endColumn":17,"suggestions":"231"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":17,"nodeType":"202","messageId":"203","endLine":7,"endColumn":20,"suggestions":"232"},{"ruleId":"200","severity":1,"message":"201","line":8,"column":24,"nodeType":"202","messageId":"203","endLine":8,"endColumn":27,"suggestions":"233"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":14,"nodeType":"202","messageId":"203","endLine":7,"endColumn":17,"suggestions":"234"},{"ruleId":"200","severity":1,"message":"201","line":14,"column":14,"nodeType":"202","messageId":"203","endLine":14,"endColumn":17,"suggestions":"235"},{"ruleId":"200","severity":1,"message":"201","line":9,"column":22,"nodeType":"202","messageId":"203","endLine":9,"endColumn":25,"suggestions":"236"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":16,"nodeType":"202","messageId":"203","endLine":11,"endColumn":19,"suggestions":"237"},{"ruleId":"200","severity":1,"message":"201","line":12,"column":14,"nodeType":"202","messageId":"203","endLine":12,"endColumn":17,"suggestions":"238"},{"ruleId":"200","severity":1,"message":"201","line":9,"column":22,"nodeType":"202","messageId":"203","endLine":9,"endColumn":25,"suggestions":"239"},{"ruleId":"200","severity":1,"message":"201","line":12,"column":17,"nodeType":"202","messageId":"203","endLine":12,"endColumn":20,"suggestions":"240"},{"ruleId":"200","severity":1,"message":"201","line":14,"column":19,"nodeType":"202","messageId":"203","endLine":14,"endColumn":22,"suggestions":"241"},{"ruleId":"200","severity":1,"message":"201","line":16,"column":19,"nodeType":"202","messageId":"203","endLine":16,"endColumn":22,"suggestions":"242"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":21,"nodeType":"202","messageId":"203","endLine":11,"endColumn":24,"suggestions":"243"},{"ruleId":"200","severity":1,"message":"201","line":13,"column":19,"nodeType":"202","messageId":"203","endLine":13,"endColumn":22,"suggestions":"244"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":21,"nodeType":"202","messageId":"203","endLine":11,"endColumn":24,"suggestions":"245"},{"ruleId":"200","severity":1,"message":"201","line":19,"column":26,"nodeType":"202","messageId":"203","endLine":19,"endColumn":29,"suggestions":"246"},{"ruleId":"189","severity":1,"message":"247","line":34,"column":11,"nodeType":"191","messageId":"192","endLine":34,"endColumn":58},{"ruleId":"200","severity":1,"message":"201","line":146,"column":35,"nodeType":"202","messageId":"203","endLine":146,"endColumn":38,"suggestions":"248"},{"ruleId":"200","severity":1,"message":"201","line":200,"column":35,"nodeType":"202","messageId":"203","endLine":200,"endColumn":38,"suggestions":"249"},{"ruleId":"200","severity":1,"message":"201","line":6,"column":19,"nodeType":"202","messageId":"203","endLine":6,"endColumn":22,"suggestions":"250"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","FunctionDeclaration","'useEffect' is defined but never used.","'ImageCardPropsInterface' is defined but never used.","'ErrorMessageDialog' is defined but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg","'props' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["251","252"],["253","254"],["255","256"],["257","258"],"'RadioButtonInterface' is defined but never used.",["259","260"],["261","262"],["263","264"],["265","266"],["267","268"],["269","270"],["271","272"],["273","274"],["275","276"],"'storageCardList' is defined but never used.",["277","278"],["279","280"],"'SelectOptionInterface' is defined but never used.",["281","282"],"'setIsError' is assigned a value but never used.",["283","284"],["285","286"],["287","288"],["289","290"],["291","292"],["293","294"],["295","296"],["297","298"],["299","300"],["301","302"],["303","304"],["305","306"],["307","308"],["309","310"],["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],"'defaultAdditionalCard' is assigned a value but never used.",["329","330"],["331","332"],["333","334"],{"messageId":"335","fix":"336","desc":"337"},{"messageId":"338","fix":"339","desc":"340"},{"messageId":"335","fix":"341","desc":"337"},{"messageId":"338","fix":"342","desc":"340"},{"messageId":"335","fix":"343","desc":"337"},{"messageId":"338","fix":"344","desc":"340"},{"messageId":"335","fix":"345","desc":"337"},{"messageId":"338","fix":"346","desc":"340"},{"messageId":"335","fix":"347","desc":"337"},{"messageId":"338","fix":"348","desc":"340"},{"messageId":"335","fix":"349","desc":"337"},{"messageId":"338","fix":"350","desc":"340"},{"messageId":"335","fix":"351","desc":"337"},{"messageId":"338","fix":"352","desc":"340"},{"messageId":"335","fix":"353","desc":"337"},{"messageId":"338","fix":"354","desc":"340"},{"messageId":"335","fix":"355","desc":"337"},{"messageId":"338","fix":"356","desc":"340"},{"messageId":"335","fix":"357","desc":"337"},{"messageId":"338","fix":"358","desc":"340"},{"messageId":"335","fix":"359","desc":"337"},{"messageId":"338","fix":"360","desc":"340"},{"messageId":"335","fix":"361","desc":"337"},{"messageId":"338","fix":"362","desc":"340"},{"messageId":"335","fix":"363","desc":"337"},{"messageId":"338","fix":"364","desc":"340"},{"messageId":"335","fix":"365","desc":"337"},{"messageId":"338","fix":"366","desc":"340"},{"messageId":"335","fix":"367","desc":"337"},{"messageId":"338","fix":"368","desc":"340"},{"messageId":"335","fix":"369","desc":"337"},{"messageId":"338","fix":"370","desc":"340"},{"messageId":"335","fix":"371","desc":"337"},{"messageId":"338","fix":"372","desc":"340"},{"messageId":"335","fix":"373","desc":"337"},{"messageId":"338","fix":"374","desc":"340"},{"messageId":"335","fix":"375","desc":"337"},{"messageId":"338","fix":"376","desc":"340"},{"messageId":"335","fix":"377","desc":"337"},{"messageId":"338","fix":"378","desc":"340"},{"messageId":"335","fix":"379","desc":"337"},{"messageId":"338","fix":"380","desc":"340"},{"messageId":"335","fix":"381","desc":"337"},{"messageId":"338","fix":"382","desc":"340"},{"messageId":"335","fix":"383","desc":"337"},{"messageId":"338","fix":"384","desc":"340"},{"messageId":"335","fix":"385","desc":"337"},{"messageId":"338","fix":"386","desc":"340"},{"messageId":"335","fix":"387","desc":"337"},{"messageId":"338","fix":"388","desc":"340"},{"messageId":"335","fix":"389","desc":"337"},{"messageId":"338","fix":"390","desc":"340"},{"messageId":"335","fix":"391","desc":"337"},{"messageId":"338","fix":"392","desc":"340"},{"messageId":"335","fix":"393","desc":"337"},{"messageId":"338","fix":"394","desc":"340"},{"messageId":"335","fix":"395","desc":"337"},{"messageId":"338","fix":"396","desc":"340"},{"messageId":"335","fix":"397","desc":"337"},{"messageId":"338","fix":"398","desc":"340"},{"messageId":"335","fix":"399","desc":"337"},{"messageId":"338","fix":"400","desc":"340"},{"messageId":"335","fix":"401","desc":"337"},{"messageId":"338","fix":"402","desc":"340"},{"messageId":"335","fix":"403","desc":"337"},{"messageId":"338","fix":"404","desc":"340"},{"messageId":"335","fix":"405","desc":"337"},{"messageId":"338","fix":"406","desc":"340"},{"messageId":"335","fix":"407","desc":"337"},{"messageId":"338","fix":"408","desc":"340"},{"messageId":"335","fix":"409","desc":"337"},{"messageId":"338","fix":"410","desc":"340"},{"messageId":"335","fix":"411","desc":"337"},{"messageId":"338","fix":"412","desc":"340"},{"messageId":"335","fix":"413","desc":"337"},{"messageId":"338","fix":"414","desc":"340"},{"messageId":"335","fix":"415","desc":"337"},{"messageId":"338","fix":"416","desc":"340"},{"messageId":"335","fix":"417","desc":"337"},{"messageId":"338","fix":"418","desc":"340"},{"messageId":"335","fix":"419","desc":"337"},{"messageId":"338","fix":"420","desc":"340"},{"messageId":"335","fix":"421","desc":"337"},{"messageId":"338","fix":"422","desc":"340"},"suggestUnknown",{"range":"423","text":"424"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"423","text":"425"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"426","text":"424"},{"range":"426","text":"425"},{"range":"427","text":"424"},{"range":"427","text":"425"},{"range":"428","text":"424"},{"range":"428","text":"425"},{"range":"429","text":"424"},{"range":"429","text":"425"},{"range":"430","text":"424"},{"range":"430","text":"425"},{"range":"431","text":"424"},{"range":"431","text":"425"},{"range":"432","text":"424"},{"range":"432","text":"425"},{"range":"433","text":"424"},{"range":"433","text":"425"},{"range":"434","text":"424"},{"range":"434","text":"425"},{"range":"435","text":"424"},{"range":"435","text":"425"},{"range":"436","text":"424"},{"range":"436","text":"425"},{"range":"437","text":"424"},{"range":"437","text":"425"},{"range":"438","text":"424"},{"range":"438","text":"425"},{"range":"439","text":"424"},{"range":"439","text":"425"},{"range":"440","text":"424"},{"range":"440","text":"425"},{"range":"441","text":"424"},{"range":"441","text":"425"},{"range":"442","text":"424"},{"range":"442","text":"425"},{"range":"443","text":"424"},{"range":"443","text":"425"},{"range":"444","text":"424"},{"range":"444","text":"425"},{"range":"445","text":"424"},{"range":"445","text":"425"},{"range":"446","text":"424"},{"range":"446","text":"425"},{"range":"447","text":"424"},{"range":"447","text":"425"},{"range":"448","text":"424"},{"range":"448","text":"425"},{"range":"449","text":"424"},{"range":"449","text":"425"},{"range":"450","text":"424"},{"range":"450","text":"425"},{"range":"451","text":"424"},{"range":"451","text":"425"},{"range":"452","text":"424"},{"range":"452","text":"425"},{"range":"453","text":"424"},{"range":"453","text":"425"},{"range":"454","text":"424"},{"range":"454","text":"425"},{"range":"455","text":"424"},{"range":"455","text":"425"},{"range":"456","text":"424"},{"range":"456","text":"425"},{"range":"457","text":"424"},{"range":"457","text":"425"},{"range":"458","text":"424"},{"range":"458","text":"425"},{"range":"459","text":"424"},{"range":"459","text":"425"},{"range":"460","text":"424"},{"range":"460","text":"425"},{"range":"461","text":"424"},{"range":"461","text":"425"},{"range":"462","text":"424"},{"range":"462","text":"425"},{"range":"463","text":"424"},{"range":"463","text":"425"},{"range":"464","text":"424"},{"range":"464","text":"425"},{"range":"465","text":"424"},{"range":"465","text":"425"},{"range":"466","text":"424"},{"range":"466","text":"425"},[659,662],"unknown","never",[387,390],[453,456],[501,504],[256,259],[275,278],[408,411],[427,430],[172,175],[297,300],[397,400],[416,419],[662,665],[197,200],[226,229],[501,504],[369,372],[435,438],[253,256],[272,275],[256,259],[275,278],[408,411],[427,430],[197,200],[226,229],[172,175],[297,300],[345,348],[393,396],[412,415],[345,348],[432,435],[496,499],[544,547],[445,448],[493,496],[367,370],[575,578],[5764,5767],[8135,8138],[140,143]]